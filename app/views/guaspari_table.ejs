<!DOCTYPE html>
<html lang="en">
  <head>
    <base href="/" />
    <meta charset="utf-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta
      name="viewport"
      content="width=device-width, initial-scale=1, shrink-to-fit=no"
    />
    <meta name="description" content="" />
    <meta name="author" content="" />

    <title>SWAMP - IoT Manager</title>
    <link rel="stylesheet" href="css/font-awesome.min.css" />
    <!-- Custom fonts for this template-->
    <style>
      .mystyle2 {
        display: none;
      }
      #graph {
        min-width: 100%;
        min-height: 900px;
        border: 1px solid lightgray;
      }
      .vis-network {
        min-width: 100%;
        min-height: 400px;
      }
    </style>

    <link
      href="https://fonts.googleapis.com/css?family=Nunito:200,200i,300,300i,400,400i,600,600i,700,700i,800,800i,900,900i"
      rel="stylesheet"
    />

    <!-- Custom styles for this template-->
    <link href="css/sb-admin-2.min.css" rel="stylesheet" />

    <script
      type="text/javascript"
      src="https://www.gstatic.com/charts/loader.js"
    ></script>

    <script
      type="text/javascript"
      src="https://visjs.github.io/vis-network/standalone/umd/vis-network.min.js"
    ></script>

    <script>
      var arr;
      window.onload = function () {
        //Mask.setOnlyNumbers(Selector.$('tempo'));
        getNode();
        showLoading();
      };

      function getNode() {
        var req2 = new XMLHttpRequest();

        var url =
          "http://13.64.102.58:1026/v2/entities/urn:ngsi-ld:Guaspari:Graph";

        req2.open("GET", url, true);

        req2.setRequestHeader("fiware-service", "openiot");
        req2.setRequestHeader("fiware-servicepath", "/");

        req2.onreadystatechange = function () {
          if (this.readyState == 4 && this.status == 200) {
            var myArr = JSON.parse(this.responseText);

            return myArr;
          } else {
            //console.log("Error: "+this.responseText);
          }
        };
        req2.onload = async function () {
          if (req2.status != 200) {
            // analyze HTTP status of the response
            alert(`Error ${req2.status}: ${req2.statusText}`); // e.g. 404: Not Found
          } else {
            // show the result
            var myArr = JSON.parse(req2.response);
            var nodes = myArr.attributes.value[0].nodes;
            var edges = myArr.attributes.value[0].edges;

            let entities = await getEntities(nodes);
            let timeseries = await getTimeSeries(nodes);
            drawGraph(entities, timeseries);
          }
        };
        req2.send();
      }

      const getEntities = async (myArr) => {
        var entities = new Array();
        var elements = myArr.length;
        for (i = 0; i < myArr.length; i++) {
          var temp = await API(myArr[i].id);
          entities.push(temp);
        }

        return entities;
      };
      const getTimeSeries = async (myArr) => {
        var entities = new Array();
        var elements = myArr.length;
        for (i = 0; i < myArr.length; i++) {
          var temp = await timeSeries(myArr[i].id);
          entities.push(temp);
        }

        return entities;
      };

      const API = async (id) => {
        var url = "http://13.64.102.58:1026/v2/entities/" + id;
        var opcoes = {
          method: "GET",

          headers: {
            "fiware-service": "openiot",
            "fiware-servicepath": "/",
          },
        };
        try {
          const response = await fetch(url, opcoes);
          const json = response.json();
          return json;
        } catch (error) {
          return error;
          console.log(error);
        }
      };

      async function getAllEntityData(id) {
        var xhr = new XMLHttpRequest();
        return new Promise(function (resolve, reject) {
          xhr.onreadystatechange = function () {
            if (xhr.readyState == 4) {
              if (xhr.status >= 300) {
                reject("Error, status code = " + xhr.status);
              } else {
                resolve(JSON.parse(xhr.responseText));
              }
            }
          };
          var url = "http://13.64.102.58:1026/v2/entities/" + id;
          xhr.open("get", url, true);
          xhr.setRequestHeader("Access-Control-Allow-Origin", "*");
          xhr.setRequestHeader("fiware-service", "openiot");
          xhr.setRequestHeader("fiware-servicepath", "/");
          xhr.setRequestHeader("Access-Control-Allow-Origin", "*");
          xhr.send();
        });
      }
    </script>
    <style>
      .loader {
        border: 16px solid #f3f3f3; /* Light grey */
        border-top: 16px solid #3498db; /* Blue */
        border-radius: 50%;
        width: 120px;
        height: 120px;
        animation: spin 2s linear infinite;
      }

      @keyframes spin {
        0% {
          transform: rotate(0deg);
        }
        100% {
          transform: rotate(360deg);
        }
      }
      .loader-wrapper {
        width: 100%;
        position: absolute;
        height: 100%;
        z-index: 12;
        background-color: black;
        opacity: 30%;
      }
    </style>
  </head>

  <body id="page-top">
    <!-- Page Wrapper -->
    <div id="wrapper">
      <% include ./nav %>
      <!-- Sidebar -->

      <!-- End of Sidebar -->

      <!-- Content Wrapper -->
      <div id="content-wrapper" class="d-flex flex-column">
        <!-- Main Content -->
        <div id="content">
          <!-- Topbar -->
          <nav
            class="navbar navbar-expand navbar-light bg-white topbar mb-4 static-top shadow"
          >
            <!-- Sidebar Toggle (Topbar) -->
            <button
              id="sidebarToggleTop"
              class="btn btn-link d-md-none rounded-circle mr-3"
            >
              <i class="fa fa-bars"></i>
            </button>

            <!-- Topbar Search -->

            <!-- Topbar Navbar -->
            <ul class="navbar-nav ml-auto">
              <!-- Nav Item - Search Dropdown (Visible Only XS) -->

              <!-- Nav Item - Alerts -->
              <li class="nav-item dropdown no-arrow mx-1">
                <a
                  class="nav-link dropdown-toggle"
                  href="#"
                  id="alertsDropdown"
                  role="button"
                  data-toggle="dropdown"
                  aria-haspopup="true"
                  aria-expanded="false"
                >
                  <i class="fas fa-bell fa-fw"></i>
                  <!-- Counter - Alerts -->
                  <span class="badge badge-danger badge-counter"></span>
                </a>
                <!-- Dropdown - Alerts -->
                <div
                  class="dropdown-list dropdown-menu dropdown-menu-right shadow animated--grow-in"
                  aria-labelledby="alertsDropdown"
                >
                  <h6 class="dropdown-header">
                    Alerts Center
                  </h6>

                  <a
                    class="dropdown-item text-center small text-gray-500"
                    href="#"
                    >Show All Alerts</a
                  >
                </div>
              </li>

              <div class="topbar-divider d-none d-sm-block"></div>

              <!-- Nav Item - User Information -->
              <li class="nav-item dropdown no-arrow">
                <a
                  class="nav-link dropdown-toggle"
                  href="#"
                  id="userDropdown"
                  role="button"
                  data-toggle="dropdown"
                  aria-haspopup="true"
                  aria-expanded="false"
                >
                  <span class="mr-2 d-none d-lg-inline text-gray-600 small"
                    >Undefined</span
                  >
                  <img
                    class="img-profile rounded-circle"
                    src="https://f0.pngfuel.com/png/178/595/black-profile-icon-illustration-user-profile-computer-icons-login-user-avatars-png-clip-art-thumbnail.png"
                  />
                </a>
                <!-- Dropdown - User Information -->
                <div
                  class="dropdown-menu dropdown-menu-right shadow animated--grow-in"
                  aria-labelledby="userDropdown"
                >
                  <a class="dropdown-item" href="#">
                    <i class="fas fa-user fa-sm fa-fw mr-2 text-gray-400"></i>
                    Profile
                  </a>
                  <a class="dropdown-item" href="#">
                    <i class="fas fa-cogs fa-sm fa-fw mr-2 text-gray-400"></i>
                    Settings
                  </a>
                  <a class="dropdown-item" href="#">
                    <i class="fas fa-list fa-sm fa-fw mr-2 text-gray-400"></i>
                    Activity Log
                  </a>
                  <div class="dropdown-divider"></div>
                  <a
                    class="dropdown-item"
                    href="#"
                    data-toggle="modal"
                    data-target="#logoutModal"
                  >
                    <i
                      class="fas fa-sign-out-alt fa-sm fa-fw mr-2 text-gray-400"
                    ></i>
                    Logout
                  </a>
                </div>
              </li>
            </ul>
          </nav>
          <!-- End of Topbar -->

          <!-- Begin Page Content -->

          <!-- Begin Page Content -->
          <div class="container-fluid">
            <!-- Page Heading -->
            <h1 class="h3 mb-1 text-gray-800">IoT Manager</h1>

            <!-- Content Row -->
            <div class="row">
              <div class="col-lg-12">
                <!-- Overflow Hidden -->
                <div class="card mb-12">
                  <div class="card-header py-3">
                    <h6 class="m-0 font-weight-bold text-primary"></h6>
                  </div>

                  <div class="card-body">
                    <h3>Installed Probes</h3>
                    <div id="loader-wrapper" class="loader-wrapper">
                      <div id="loader" class="loader"></div>
                    </div>
                    <div class="row">
                      <div id="left" class="col-sm-5">
                        <div id="graph"></div>
                      </div>
                      <div id="right" class="col-sm-7">
                        <div id="details">
                          <table class="table" id="detailsTable">
                            <thead class="thead-dark">
                              <tr>
                                <td>Entity:</td>
                                <td><span id="detailsName"></span></td>
                              </tr>
                            </thead>
                            <tbody>
                              <tr>
                                <td>Last Message:</td>
                                <td><span id="detailsLastMessage"></span></td>
                              </tr>
                              <tr>
                                <td>Memory:</td>
                                <td><span id="detailsMemory"></span></td>
                              </tr>
                              <tr>
                                <td>CPU:</td>
                                <td><span id="detailsCPU"></span></td>
                              </tr>
                            </tbody>
                          </table>
                        </div>
                        <div id="charts">
                          <div id="chartcpu"></div>
                          <div id="chartmem"></div>
                        </div>
                        <button
                          onclick="expandDiv()"
                          class="btn btn-outline-primary"
                          id="expandBtn"
                        >
                          <i class="fa fa-expand-arrows-alt">Expand</i>
                        </button>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
          <!-- /.container-fluid -->
        </div>
        <!-- End of Main Content -->
        <!-- End of Main Content -->

        <!-- Footer -->
        <footer class="sticky-footer bg-white">
          <div class="container my-auto">
            <div class="copyright text-center my-auto">
              <span>SWAMP-Project</span>
            </div>
          </div>
        </footer>
        <!-- End of Footer -->
      </div>
      <!-- End of Content Wrapper -->
    </div>
    <!-- End of Page Wrapper -->

    <!-- Scroll to Top Button-->
    <a class="scroll-to-top rounded" href="#page-top">
      <i class="fas fa-angle-up"></i>
    </a>

    <!-- Logout Modal-->
    <div
      class="modal fade"
      id="logoutModal"
      tabindex="-1"
      role="dialog"
      aria-labelledby="exampleModalLabel"
      aria-hidden="true"
    >
      <div class="modal-dialog" role="document">
        <div class="modal-content">
          <div class="modal-header">
            <h5 class="modal-title" id="exampleModalLabel">Ready to Leave?</h5>
            <button
              class="close"
              type="button"
              data-dismiss="modal"
              aria-label="Close"
            >
              <span aria-hidden="true">×</span>
            </button>
          </div>
          <div class="modal-body">
            Select "Logout" below if you are ready to end your current session.
          </div>
          <div class="modal-footer">
            <button
              class="btn btn-secondary"
              type="button"
              data-dismiss="modal"
            >
              Cancel
            </button>
            <a class="btn btn-primary" href="login.html">Logout</a>
          </div>
        </div>
      </div>
    </div>

    <!-- Custom scripts for all pages-->
    <script src="js/sb-admin-2.min.js"></script>

    <script type="text/javascript">
      function drawGraph(status, time) {
        drawChart(time, "memoryavailable", "Memory Available", "#chartmem");
        drawChart(time, "cpu", "Cpu Usage", "#chartcpu");

        var table =
          '<table id="my-table-id" class="table table-striped table-hover">';
        table +=
          "<thead><tr> <td>Entity ID </td><td>Alive</td><td>Status</td><td>Delay</td></tr></thead><tbody>";

        status.forEach((entity) => {
          table += "<tr>";
          table +=
            '<td id="' +
            entity.id +
            '" style="cursor: pointer;" onclick="drawDetails(this.id)">';
          table += entity.id + "</td>";

          table += "<td>" + entity.ping_status.value.value + "</td>";
          var color;
          if (entity.available.value.value == true) {
            if (entity.ping_status.value.value == true) {
              color = "#D0F0C0";
            } else {
              color = "#FFFACD";
            }
          } else {
            if (entity.ping_status.value.value == true) {
              color = "#FFA500";
            } else {
              color = "#FF7F7F";
            }
          }
          table +=
            '<td style="background-color:' +
            color +
            '">' +
            entity.available.value.value +
            "</td>";
          table += "<td>" + entity.ping_delay.value.value + "</td>";
          table += '<td style="text-align: center;"></td>';
          table += "</tr>";
        });

        table += "</tbody></table>";
        table +=
          '<button type="button" onclick="teste()"class="btn btn-link">Teste</button>';
        // create a network
        var container = document.getElementById("graph");
        container.innerHTML = table;
      }

      function expandDiv() {
        var element = document.getElementById("right");
        element.classList.toggle("col-sm-12");
        var element1 = document.getElementById("left");
        element1.classList.toggle("mystyle2");
        var element2 = document.getElementById("expandBtn");
        if (element2.innerHTML == "Minimize") {
          element2.innerHTML = "Expand";
        } else {
          element2.innerHTML = "Minimize";
        }
      }

      function drawDetails(node) {
        console.log("Nde:" + node + "Teste");

        Promise.all([timeSeries(node), API(node)])
          .then(function (result1) {
            document.getElementById("detailsName").innerHTML = node;

            var ts = new Date(parseInt(result1[1].timestamp.value));

            document.getElementById("detailsLastMessage").innerHTML = ts;
            document.getElementById("detailsCPU").innerHTML =
              result1[1].cpu.value.value;
            document.getElementById("detailsMemory").innerHTML =
              result1[1].memoryavailable.value.value +
              "/" +
              result1[1].memorysize.value.value;
            console.log("result");
            console.log(result1[0]);
          })
          .catch((err) => {
            console.log(err);
          });
      }
    </script>
    <script src="https://cdn.jsdelivr.net/npm/apexcharts"></script>
    <script>
      function drawChart(dataArray, type, chartLegend, chartdiv) {
        var y = dataArray[0].attributes[6].values;

        var seriesMEM = [];
        dataArray.forEach((element) => {
          console.log(element.entityId);
          var serie = [];
          serie.name = element.entityId;
          serie.data = [];
          var data = [];
          var point = { y: 0, x: 0 };
          var memorypoint = [];
          var timepoint = [];
          element.attributes.forEach((valor) => {
            if (valor.attrName == type) {
              console.log("VALOR");
              console.log(valor);
              memorypoint = valor.values;
            } else if (valor.attrName == "timestamp") {
              timepoint = valor.values;
              y = valor.values;
            } else {
            }
          });
          for (i = 0; i < timepoint.length; i++) {
            result = 0;
            if (i != 0) {
              result = timepoint[i - 1] - timepoint[i];
            }
          }
          for (i = 0; i < memorypoint.length; i++) {
            point.y = 0;
            point.x = 0;
            point.y = parseInt(memorypoint[i].value);
            point.x = parseInt(timepoint[i]);

            serie.data.push(JSON.parse(JSON.stringify(point)));
          }

          seriesMEM.push(serie);
        });
        console.log(seriesMEM);
        //MEMORIA

        var optionsMEM = {
          title: {
            text: chartLegend,
            align: "left",
          },
          dataLabels: {
            enabled: true,
          },
          chart: {
            id: chartLegend,
            type: "line",
            height: 350,
            tools: {
              download: true,
            },
          },
          series: seriesMEM,
          xaxis: {
            type: "datetime",
            categories: y,
          },
        };
        var chart = new ApexCharts(
          document.querySelector(chartdiv),
          optionsMEM
        );

        chart.render();
        hideLoading();
        //here
      }
      function hideLoading() {
        var id = document.getElementById("loader-wrapper");
        id.style.display = "none";
      }
      function showLoading() {
        var id = document.getElementById("loader-wrapper");
        id.style.display = "block";
      }
      const timeSeries = async (id) => {
        console.log(id);
        var url =
          "https://cors-anywhere.herokuapp.com/http://13.64.102.58:8668/v2/entities/" +
          id +
          "?lastN=140";
        console.log(url);
        var opcoes = {
          method: "GET",

          headers: {
            "fiware-service": "openiot",
            "fiware-servicepath": "/",
          },
        };
        try {
          const response = await fetch(url, opcoes);
          const json = response.json();

          return json;
        } catch (error) {
          return error;
          console.log(error);
        }
      };

      function teste() {
        ApexCharts.exec(
          "memory",
          "updateSeries",

          [
            {
              data: [32, 44, 31, 41, 22],
              name: "Testando",
            },
          ],
          true
        );
      }
    </script>
  </body>
</html>
