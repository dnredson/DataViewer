<!DOCTYPE html>
<html lang="en">
  <head>
    <base href="/" />
    <meta charset="utf-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta
      name="viewport"
      content="width=device-width, initial-scale=1, shrink-to-fit=no"
    />
    <meta name="description" content="" />
    <meta name="author" content="" />

    <title>SWAMP - IoT Manager</title>

    <!-- Custom fonts for this template-->
    <script
    type="text/javascript"
    src="https://cdn.jsdelivr.net/jquery/latest/jquery.min.js"
  ></script>
    <link
      href="vendor/fontawesome-free/css/all.min.css"
      rel="stylesheet"
      type="text/css"
    />
    <link
      href="https://fonts.googleapis.com/css?family=Nunito:200,200i,300,300i,400,400i,600,600i,700,700i,800,800i,900,900i"
      rel="stylesheet"
    />

    <!-- Custom styles for this template-->
    <link href="css/sb-admin-2.min.css" rel="stylesheet" />

  
  <script
    type="text/javascript"
    src="https://cdn.jsdelivr.net/momentjs/latest/moment.min.js"
  ></script>
  <script
    type="text/javascript"
    src="https://cdn.jsdelivr.net/npm/daterangepicker/daterangepicker.min.js"
  ></script>
  <link
    rel="stylesheet"
    type="text/css"
    href="https://cdn.jsdelivr.net/npm/daterangepicker/daterangepicker.css"
  />
    <script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>

   

    <script>
       var dateRange="";
               $(function() {
                $('input[name="datetimes"]').daterangepicker({
            "showDropdowns": true,
            "timePicker": true,
                "timePicker24Hour": true,
            
                "startDate": moment().startOf('hour'),
    "endDate": moment().startOf('hour').add(0, 'hour')
        }, function(start, end, label) {
        
            dateRange={ init:start._d.getTime()/1000, final: end._d.getTime()/1000 };
            var url = window.location.href;
    url = url.split('?')[0];
   
            url +="?&init="+dateRange.init+"&final="+dateRange.final;
            
            window.location.href = url;
         //getOrionData(dateRange);
        });
        });

        
    </script>

<style>
  .loader-wrapper {
        width: 100%;
        position: absolute;
        height: 100%;
        z-index: 12;
        background-color: #e7e8e8;
        opacity: 90%;
      }
.card-header {
  border-top: 10px;

}

</style>
  
  </head>

  <body id="page-top">
   
    <body id="page-top">
      <!-- Page Wrapper -->
      <div id="wrapper">
        <% include ./nav %>
        <!-- Sidebar -->
  
        <!-- End of Sidebar -->
  
        <!-- Content Wrapper -->
        <div id="content-wrapper" class="d-flex flex-column">
          <!-- Main Content -->
          <div id="content">
            <!-- Topbar -->
            <nav
              class="navbar navbar-expand navbar-light bg-white topbar mb-4 static-top shadow"
            >
              <!-- Sidebar Toggle (Topbar) -->
              <button
                id="sidebarToggleTop"
                class="btn btn-link d-md-none rounded-circle mr-3"
              >
                <i class="fa fa-bars"></i>
              </button>
  
              <!-- Topbar Search -->
              
  
              <!-- Topbar Navbar -->
              <ul class="navbar-nav ml-auto">
                <!-- Nav Item - Search Dropdown (Visible Only XS) -->
                
  
                <!-- Nav Item - Alerts -->
                <li class="nav-item dropdown no-arrow mx-1">
                  <a
                    class="nav-link dropdown-toggle"
                    href="#"
                    id="alertsDropdown"
                    role="button"
                    data-toggle="dropdown"
                    aria-haspopup="true"
                    aria-expanded="false"
                  >
                    <i class="fas fa-bell fa-fw"></i>
                    <!-- Counter - Alerts -->
                    <span class="badge badge-danger badge-counter"></span>
                  </a>
                  <!-- Dropdown - Alerts -->
                  <div
                    class="dropdown-list dropdown-menu dropdown-menu-right shadow animated--grow-in"
                    aria-labelledby="alertsDropdown"
                  >
                    <h6 class="dropdown-header">
                      Alerts Center
                    </h6>
                    <a class="dropdown-item d-flex align-items-center" href="#">
                      
                      <div>
                        
                        
                        >
                      </div>
                    </a>
                    
                    <a
                      class="dropdown-item text-center small text-gray-500"
                      href="#"
                      >Show All Alerts</a
                    >
                  </div>
                </li>
  
  
                <div class="topbar-divider d-none d-sm-block"></div>
  
                <!-- Nav Item - User Information -->
                <li class="nav-item dropdown no-arrow">
                  <a
                    class="nav-link dropdown-toggle"
                    href="#"
                    id="userDropdown"
                    role="button"
                    data-toggle="dropdown"
                    aria-haspopup="true"
                    aria-expanded="false"
                  >
                    <span class="mr-2 d-none d-lg-inline text-gray-600 small"
                      >Undefined</span
                    >
                    <img
                      class="img-profile rounded-circle"
                      src="https://f0.pngfuel.com/png/178/595/black-profile-icon-illustration-user-profile-computer-icons-login-user-avatars-png-clip-art-thumbnail.png"
                    />
                  </a>
                  <!-- Dropdown - User Information -->
                  <div
                    class="dropdown-menu dropdown-menu-right shadow animated--grow-in"
                    aria-labelledby="userDropdown"
                  >
                    <a class="dropdown-item" href="#">
                      <i class="fas fa-user fa-sm fa-fw mr-2 text-gray-400"></i>
                      Profile
                    </a>
                    <a class="dropdown-item" href="#">
                      <i class="fas fa-cogs fa-sm fa-fw mr-2 text-gray-400"></i>
                      Settings
                    </a>
                    <a class="dropdown-item" href="#">
                      <i class="fas fa-list fa-sm fa-fw mr-2 text-gray-400"></i>
                      Activity Log
                    </a>
                    <div class="dropdown-divider"></div>
                    <a
                      class="dropdown-item"
                      href="#"
                      data-toggle="modal"
                      data-target="#logoutModal"
                    >
                      <i
                        class="fas fa-sign-out-alt fa-sm fa-fw mr-2 text-gray-400"
                      ></i>
                      Logout
                    </a>
                  </div>
                </li>
              </ul>
            </nav>
          <!-- End of Topbar -->

          <!-- Begin Page Content -->

          <!-- Begin Page Content -->
          <div class="container-fluid">
            <!-- Page Heading -->
            

            <!-- Content Row -->
            <div class="row">
              <div class="col-lg-12">
                <div id="loader-wrapper" class="loader-wrapper">
                  <div id="loader" class="loader"><h2>Searching Data ...</h2>  <br><img style="width: auto;height: auto" src="https://images.squarespace-cdn.com/content/v1/53777176e4b0f6c6b684652b/1545843455112-DQKFW0FSLIATEO94L5CK/ke17ZwdGBToddI8pDm48kDAv91l_EVpAtt3T82Wm1m9Zw-zPPgdn4jUwVcJE1ZvWEtT5uBSRWt4vQZAgTJucoTqqXjS3CfNDSuuf31e0tVEcs4OJ1MUiSygP0U4z2bUeJj0Nr1n48rGt1cKo_lK-mJuG45vQwBxdpDrCGUSSl5w/drone-dribbb.gif"/></div>
                </div>
                <!-- Overflow Hidden -->
                <div class="card mb-12">
                  <div class="card-header py-3">
                    <h6 class="m-0 font-weight-bold text-primary">
                      <h1 class="h3 mb-1 text-gray-800" id="pilotTitle"><%= pilot %> Pilot</h1>
                    </h6>
                  </div>
                  
                  <div class="card-body">
                    
                    The last 30 samples are showed by default.<br>
                    Select the Date Interval
                    <div id="alert" class="alert"></div>
                    

                    <input class="form-control" type="text" name="datetimes"  />
                   <div id="clearButtonDiv"> <button type="button" onClick="clearLink()" class="btn btn-primary">Clear Filters</button> </div>
                    <div id="accordion" class="card">
                     </div>
                    
                  </div>
        
               
                </div>
              </div>
            </div>
          </div>
          <!-- /.container-fluid -->
        </div>
        <!-- End of Main Content -->
        <!-- End of Main Content -->

        <!-- Footer -->
        <footer class="sticky-footer bg-white">
          <div class="container my-auto">
            <div class="copyright text-center my-auto">
              <span>SWAMP-Project</span>
            </div>
          </div>
        </footer>
        <!-- End of Footer -->
      </div>
      <!-- End of Content Wrapper -->
    </div>
    <!-- End of Page Wrapper -->

    <!-- Scroll to Top Button-->
    <a class="scroll-to-top rounded" href="#page-top">
      <i class="fas fa-angle-up"></i>
    </a>

    <!-- Logout Modal-->
    <div
      class="modal fade"
      id="logoutModal"
      tabindex="-1"
      role="dialog"
      aria-labelledby="exampleModalLabel"
      aria-hidden="true"
    >
      <div class="modal-dialog" role="document">
        <div class="modal-content">
          <div class="modal-header">
            <h5 class="modal-title" id="exampleModalLabel">Ready to Leave?</h5>
            <button
              class="close"
              type="button"
              data-dismiss="modal"
              aria-label="Close"
            >
              <span aria-hidden="true">×</span>
            </button>
          </div>
          <div class="modal-body">
            Select "Logout" below if you are ready to end your current session.
          </div>
          <div class="modal-footer">
            <button
              class="btn btn-secondary"
              type="button"
              data-dismiss="modal"
            >
              Cancel
            </button>
            <a class="btn btn-primary" href="login.html">Logout</a>
          </div>
        </div>
      </div>
    </div>
    <script>
        
     


  
      function getDate(){
      getOrionData(dateRange);
      showLoading();
      
      }
      
                </script>
             
      <script>
        function clearLink(){
          
          var url = window.location.href;
    url = url.split('?')[0];
    window.location.href = url;
        }
      var pilot=document.getElementById("pilotTitle").innerHTML;
            console.log(pilotTitle.innerHTML);
            var pilotAddress;
            var weatherEntity;
            if(pilot=="MATOPIBA Pilot"){
              pilotAddress = "177.104.61.52";
              weatherEntity = "urn:ngsi-ld:WeatherCurrent:matopiba:ClimaTempoWeather";
            }if(pilot=="Guaspari Pilot"){
              pilotAddress = "177.104.61.17";
              weatherEntity = "urn:ngsi-ld:WeatherCurrent:guaspari:ClimaTempoWeather";
            }
         var arr;
         
        
      window.onload = function () {
        var url = window.location.href; 
        hideChartDiv("clearButtonDiv");
            
            const urlParams = new URLSearchParams(url);
           
            var start = urlParams.get('init');
            var end = urlParams.get('final')
          
            
                 getOrionData(start,end);
        }
        
        const timeSeries = async (id,start,end) => {
            
      if(start != null ){
        
        var body = '{"stmt":"SELECT iotimestamp,soilmoisturecalibrateddepth1,soilmoisturecalibrateddepth2,soilmoisturecalibrateddepth3 FROM mtbatch.etsoilprobecalibrated where entity_id=';
               body += "'"+id+"' ";
               body += 'and iotimestamp > '+ start + ' and iotimestamp < '+end;
               body +=  ' order by iotimestamp DESC LIMIT 10000;" }';
               showChartDiv("clearButtonDiv");
               
      }else{
        
        var body = '{"stmt":"SELECT iotimestamp,soilmoisturecalibrateddepth1,soilmoisturecalibrateddepth2,soilmoisturecalibrateddepth3 FROM mtbatch.etsoilprobecalibrated where entity_id=';
               body += "'"+id+"' ";
               body +=  'order by iotimestamp DESC LIMIT 30;" }';
               console.log("Sem timestamp");
      }
             
          
              var url =
                "https://cors-anywhere.herokuapp.com/http://"+pilotAddress+":4200/_sql";
          
              var opcoes = {
                method: "POST",
      
                headers: {
                  "fiware-service": "openiot",
                  "fiware-servicepath": "/",
                },
                body: body
              };
              try {
                const response = await fetch(url, opcoes);
                const json = response.json();
                
                return json;
              } catch (error) {
                return error;
                console.log(error);
              }
            };


            const timeSeriesWeather = async (id,start,end) => {
            var url;
            if(start != null ){
              url = "https://cors-anywhere.herokuapp.com/http://iotee.swamp-project.org:8668/v2/entities/"+weatherEntity+"/attrs/relativehumidity?fromDate="+start+"&toDate="+end;
              
            }else{
              url ="https://cors-anywhere.herokuapp.com/http://iotee.swamp-project.org:8668/v2/entities/urn:ngsi-ld:WeatherCurrent:matopiba:ClimaTempoWeather/attrs/relativehumidity?lastN=30"
            }
                   
                
                    
                    var opcoes = {
                      method: "GET",
            
                      headers: {
                        "fiware-service": "openiot",
                        "fiware-servicepath": "/weather",
                      },
                      
                    };
                    try {
                      const response = await fetch(url, opcoes);
                      const json = response.json();
                      
                      return json;
                    } catch (error) {
                      return error;
                      console.log(error);
                    }
                  };
        function getOrionData(start,end) {
          
      var req2 = new XMLHttpRequest();
            
            
            var url = 'http://'+pilotAddress+':1026/v2/entities?type=SoilProbeCalibrated';
            
          
            req2.open("GET", url, true);
            
            req2.setRequestHeader("fiware-service", "batch");
            req2.setRequestHeader("fiware-servicepath", "/");
            
            req2.onreadystatechange = async function(){
                if (this.readyState ==4 && this.status ==200){
                    var myArr = JSON.parse(this.responseText);
                    
                  
                   numberOfElements=myArr.length;
                   var counter=0;
            
                   for(i=0;i < numberOfElements; i++)  {
                 elementID=myArr[i].id;
                  if(myArr[i].error != undefined){
                    //errorGetEntity(myArr[i].error);
                    console.log("Erro"+i);
                    console.log(myArr[i].error);
                     alertar ("error", myArr[i].error);
      
      
                  }else{
                    
                    let time = await timeSeries(elementID,start,end);
                    console.log("ID")
                    console.log(elementID);
                   

                    createChartDiv(elementID);
                   
                    
                    if(time.rowcount > 0){
                      
                      if(i == numberOfElements-1){
                        drawChart(time,elementID,"done");  
                      }else{
                        
                        drawChart(time,elementID,"yet");
                      }
                   
                         showChartDiv(elementID,1);
                    }else{
                      counter++;
                      hideChartDiv(elementID,1);
                    }
                   
                      if(counter==numberOfElements){
                        alertar("error","There is not data available in the selected period");
                        hideLoading(); 
                      }
                   
                  }
                   }
                   
                }else{
                  
                }
            }
            req2.send();
            
           
      }
      
           
      function alertar(tipo,mensagem){
      if (tipo == "info"){
        var alert = document.getElementById("alert");
                    var body = '<div class="alert alert-info alert-dismissible fade show" role="alert">';
                    body += "<strong>Info: </strong>"+mensagem;
                    body += ' <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button></div>';
                  alert.innerHTML = body;
      
      }
      if (tipo == "error"){
        var alert = document.getElementById("alert");
                    var body = '<div class="alert alert-danger alert-dismissible fade show" role="alert">';
                    body += "<strong>Error: </strong>"+mensagem;
                    body += ' <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button></div>';
                  alert.innerHTML = body;
      }
      
      }
      function errorGetEntity(error){
       alert(error);
      
      }
      
      function createChartDiv(entityId){
      
      var block_to_insert ;
      var container_block ;
      
      block_to_insert = document.createElement( 'div' );
      block_to_insert.innerHTML = '<div id="'+entityId+'" ><div class="card-header">Probe: '+entityId+'</div><div class="card-body"><div id="'+entityId+'moisture" class="chart-div"></div></div></div></br></br>' ;
      //block_to_insert.innerHTML='<div class="card"><div class="card-header"><a class="card-link" data-toggle="collapse" href="#collapseOne'+entityId+'">Insert</a></div><div id="collapseOne'+entityId+'" class="collapse show"><div class="card-body">Inserted</div></div></div>';
      container_block = document.getElementById( 'accordion' );
      container_block.appendChild( block_to_insert );
      
      }
      
      function hideChartDiv(entityId){
        var divToHide = document.getElementById( entityId );
        divToHide.style.display = "none";
      
      }
      function showChartDiv(entityId){
        var divToHide = document.getElementById( entityId );
        divToHide.style.display = "block";
      
      }
      
            </script>
    <script>

      function formatTimestampToQLData(timestamp){
        var dateStart = new Date(timestamp);
        startYear = dateStart.getFullYear()
          startMonth = parseInt(dateStart.getMonth())+1;
          if(startMonth<10){
            startMonth="0"+startMonth;
          }
          startDay = dateStart.getDate();
          if(startDay<10){
            startDay="0"+startDay;
          }
       
        startHour = dateStart.getHours();
        if(startHour<10){
            startHour="0"+startHour;
          }
          startMin = dateStart.getMinutes();
          if(startMin<10){
            startMin="0"+startMin;
          }
          startSec = dateStart.getSeconds();
          if(startSec<10){
            startSec="0"+startSec;
          }
          var formatterDate = startYear+"-"+startMonth+"-"+startDay+"T"+startHour+":"+startMin+":"+startSec;

        
        
        return formatterDate;
        //2020-06-18T15:00:00
      }
async function  drawChart(dataArray,id,done) {
 
  var x = dataArray.index;
        var humidity=[];
        var moisture1=[];
        var moisture2=[];
        var moisture3=[];
      
      

        dataArray.rows.forEach((element) => {
          
          if(element[0] != null){
            var index = parseInt(element[0])
          var data = { x: index, y: Math.round(element[1]*100)};
          moisture1.push(data);
                    var data2 = { x: index, y: Math.round(element[2]*100)};
          moisture2.push(data2);
                    var data3 = { x: index, y: Math.round(element[3]*100)};
          moisture3.push(data3);
          
          }
        });
          var dateStart = formatTimestampToQLData(moisture1[0].x);
          var dateEnd = formatTimestampToQLData(moisture1[moisture1.length-1].x);
       

          
          let weather = await timeSeriesWeather(id,dateEnd,dateStart);
         console.log(id);

         if(weather.error == "Not Found"){
         console.log("Não encontrei registros");
         humidity.push({x:dateEnd,y:0})
         }else{
           console.log(weather.index.length );
           
          for(i=0; i < weather.index.length -1 ;i++){
            console.log(i)
           var tempHum = { x: weather.index[i], y: weather.values[i] };
           
            humidity.push(tempHum);
          }
         }
        var optionsMoisture = {
        
          title: {
            text: "Moisture Calibrated",
            align: "left",
          },
          dataLabels: {
            enabled: true,
          },
          chart: {
            id: id,
            type: "line",
            height: 350,
          },
          series: [
            {
              name: "soilMoistureCalibratedDepth1",
              data: moisture1,
            },{
              name: "soilMoistureCalibratedDepth1",
              data: moisture2
            },{
              name: "soilMoistureCalibratedDepth1",
              data: moisture3
            },{
              name: "Relative Humidity From ClimaTempo",
              data: humidity
            },
          ]
          ,
  noData: {
    text: 'No Data Available...'
  },
          xaxis: {
            type: "datetime",
            
          },
        };
        var divmoisture = id+"moisture";
        
        var chart = new ApexCharts(
         
          document.getElementById(divmoisture),
          optionsMoisture
        );
        
       
      
    
       
    
       chart.render();
    
       hideLoading(); 
       if (done=="done"){
        hideLoading(); 
  }
        
                 
      }
     

      function hideLoading() {
        var id = document.getElementById("loader-wrapper");
        id.style.display = "none";
      }
      function showLoading() {
        var id = document.getElementById("loader-wrapper");
        id.style.display = "block";
      }
    </script>
    <script src="https://cdn.jsdelivr.net/npm/apexcharts"></script>
    <!-- Bootstrap core JavaScript-->
   
    <script src="vendor/bootstrap/js/bootstrap.bundle.min.js"></script>

    <!-- Core plugin JavaScript-->
    <script src="vendor/jquery-easing/jquery.easing.min.js"></script>

    <!-- Custom scripts for all pages-->
    <script src="js/sb-admin-2.min.js"></script>
  </body>
</html>
