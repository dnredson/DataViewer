<!DOCTYPE html>
<html lang="en">

<head>
  <base href="/" />
  <meta charset="utf-8" />
  <meta http-equiv="X-UA-Compatible" content="IE=edge" />
  <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no" />
  <meta name="description" content="" />
  <meta name="author" content="" />

  <title>SWAMP - IoT Manager</title>

  <!-- Custom fonts for this template-->

  <link
    href="https://fonts.googleapis.com/css?family=Nunito:200,200i,300,300i,400,400i,600,600i,700,700i,800,800i,900,900i"
    rel="stylesheet" />

  <!-- Custom styles for this template-->
  <link href="css/sb-admin-2.min.css" rel="stylesheet" />


  <script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>

  <script type="text/javascript" src="https://visjs.github.io/vis-network/standalone/umd/vis-network.min.js"></script>

  <script>
    var arr;
    window.onload = function () {
      //Mask.setOnlyNumbers(Selector.$('tempo'));
      getNode();
    }

    function getNode() {

      var req2 = new XMLHttpRequest();

      var url = 'http://177.104.61.60:1026/v2/entities/urn:ngsi-ld:IoTManagerEdgeGraph';

      req2.open("GET", url, true);

      req2.setRequestHeader("fiware-service", "openiot");
      req2.setRequestHeader("fiware-servicepath", "/");

      req2.onreadystatechange = function () {
        if (this.readyState == 4 && this.status == 200) {
          var myArr = JSON.parse(this.responseText);

          return myArr;

        } else {
          //console.log("Error: "+this.responseText);
        }
      }
      req2.onload = function () {
        if (req2.status != 200) { // analyze HTTP status of the response
          alert(`Error ${req2.status}: ${req2.statusText}`); // e.g. 404: Not Found
        } else { // show the result
          var myArr = JSON.parse(req2.response);
          var nodes = myArr.attributes.value[0].nodes;
          var edges = myArr.attributes.value[0].edges;


          Promise.all([getEntities(nodes)])
            .then(function (result1) {
              console.log("Resultado:");
              console.log(result1);
              //drawGraph(myArr);


            })
            .catch((err) => {
              console.log(err);
            });

        }
      };
      req2.send();

    }

    const getEntities = async (myArr) => {
      var entities = new Array();
      var elements = myArr.length;
      for (i = 0; i < myArr.length; i++) {
        var temp = await API(myArr[i].id);
        entities.push(temp);
        console.log(i);
        console.log(myArr.length);
        if (i = elements - 1) {
          return await entities;
        }
      }
    };

    const API = async (id) => {
      var url = 'https://cors-anywhere.herokuapp.com/http://177.104.61.60:1026/v2/entities/' + id;
      var opcoes = {
        method: "GET",

        headers: {
          "Access-Control-Allow-Headers": "Origin, X-Requested-With, Content-Type, Accept, Authorization,fiware-service,fiware-servicepath",
          "fiware-service": "openiot",
          "fiware-servicepath": "/",
          "X-Requested-With": "xmlhttprequest",

        }

      };
      try {
        const response = await fetch(url, opcoes);
        const json = await response.json();
        return await json;
      } catch (error) {
        return error;
        console.log(error);
      }


    }

    async function getAllEntityData(id) {
      var xhr = new XMLHttpRequest();
      return new Promise(function (resolve, reject) {
        xhr.onreadystatechange = function () {
          if (xhr.readyState == 4) {
            if (xhr.status >= 300) {
              reject("Error, status code = " + xhr.status)
            } else {


              resolve(JSON.parse(xhr.responseText));
            }
          }
        }
        var url = 'https://cors-anywhere.herokuapp.com/http://177.104.61.60:1026/v2/entities/' + id;
        xhr.open('get', url, true);
        xhr.setRequestHeader("Access-Control-Allow-Origin", "*");
        xhr.setRequestHeader("fiware-service", "openiot");
        xhr.setRequestHeader("fiware-servicepath", "/");
        xhr.send();
      });
    }
  </script>
</head>



<body id="page-top">
  <!-- Page Wrapper -->
  <div id="wrapper">
    <% include ./nav %>
    <!-- Sidebar -->

    <!-- End of Sidebar -->

    <!-- Content Wrapper -->
    <div id="content-wrapper" class="d-flex flex-column">
      <!-- Main Content -->
      <div id="content">
        <!-- Topbar -->
        <nav class="navbar navbar-expand navbar-light bg-white topbar mb-4 static-top shadow">
          <!-- Sidebar Toggle (Topbar) -->
          <button id="sidebarToggleTop" class="btn btn-link d-md-none rounded-circle mr-3">
            <i class="fa fa-bars"></i>
          </button>

          <!-- Topbar Search -->


          <!-- Topbar Navbar -->
          <ul class="navbar-nav ml-auto">
            <!-- Nav Item - Search Dropdown (Visible Only XS) -->


            <!-- Nav Item - Alerts -->
            <li class="nav-item dropdown no-arrow mx-1">
              <a class="nav-link dropdown-toggle" href="#" id="alertsDropdown" role="button" data-toggle="dropdown"
                aria-haspopup="true" aria-expanded="false">
                <i class="fas fa-bell fa-fw"></i>
                <!-- Counter - Alerts -->
                <span class="badge badge-danger badge-counter"></span>
              </a>
              <!-- Dropdown - Alerts -->
              <div class="dropdown-list dropdown-menu dropdown-menu-right shadow animated--grow-in"
                aria-labelledby="alertsDropdown">
                <h6 class="dropdown-header">
                  Alerts Center
                </h6>


                <a class="dropdown-item text-center small text-gray-500" href="#">Show All Alerts</a>
              </div>
            </li>


            <div class="topbar-divider d-none d-sm-block"></div>

            <!-- Nav Item - User Information -->
            <li class="nav-item dropdown no-arrow">
              <a class="nav-link dropdown-toggle" href="#" id="userDropdown" role="button" data-toggle="dropdown"
                aria-haspopup="true" aria-expanded="false">
                <span class="mr-2 d-none d-lg-inline text-gray-600 small">Undefined</span>
                <img class="img-profile rounded-circle"
                  src="https://f0.pngfuel.com/png/178/595/black-profile-icon-illustration-user-profile-computer-icons-login-user-avatars-png-clip-art-thumbnail.png" />
              </a>
              <!-- Dropdown - User Information -->
              <div class="dropdown-menu dropdown-menu-right shadow animated--grow-in" aria-labelledby="userDropdown">
                <a class="dropdown-item" href="#">
                  <i class="fas fa-user fa-sm fa-fw mr-2 text-gray-400"></i>
                  Profile
                </a>
                <a class="dropdown-item" href="#">
                  <i class="fas fa-cogs fa-sm fa-fw mr-2 text-gray-400"></i>
                  Settings
                </a>
                <a class="dropdown-item" href="#">
                  <i class="fas fa-list fa-sm fa-fw mr-2 text-gray-400"></i>
                  Activity Log
                </a>
                <div class="dropdown-divider"></div>
                <a class="dropdown-item" href="#" data-toggle="modal" data-target="#logoutModal">
                  <i class="fas fa-sign-out-alt fa-sm fa-fw mr-2 text-gray-400"></i>
                  Logout
                </a>
              </div>
            </li>
          </ul>
        </nav>
        <!-- End of Topbar -->

        <!-- Begin Page Content -->

        <!-- Begin Page Content -->
        <div class="container-fluid">
          <!-- Page Heading -->
          <h1 class="h3 mb-1 text-gray-800">Matopiba Pilot About</h1>

          <!-- Content Row -->
          <div class="row">
            <div class="col-lg-12">
              <!-- Overflow Hidden -->
              <div class="card mb-12">
                <div class="card-header py-3">
                  <h6 class="m-0 font-weight-bold text-primary">

                  </h6>
                </div>

                <div class="card-body">

                  <h3>Installed Probes</h3>
                  <div id="graph" style="min-height: 600px;">

                    Teste
                  </div>



                </div>
              </div>
            </div>
          </div>
          <!-- /.container-fluid -->
        </div>
        <!-- End of Main Content -->
        <!-- End of Main Content -->

        <!-- Footer -->
        <footer class="sticky-footer bg-white">
          <div class="container my-auto">
            <div class="copyright text-center my-auto">
              <span>SWAMP-Project</span>
            </div>
          </div>
        </footer>
        <!-- End of Footer -->
      </div>
      <!-- End of Content Wrapper -->
    </div>
    <!-- End of Page Wrapper -->

    <!-- Scroll to Top Button-->
    <a class="scroll-to-top rounded" href="#page-top">
      <i class="fas fa-angle-up"></i>
    </a>

    <!-- Logout Modal-->
    <div class="modal fade" id="logoutModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel"
      aria-hidden="true">
      <div class="modal-dialog" role="document">
        <div class="modal-content">
          <div class="modal-header">
            <h5 class="modal-title" id="exampleModalLabel">Ready to Leave?</h5>
            <button class="close" type="button" data-dismiss="modal" aria-label="Close">
              <span aria-hidden="true">Ã—</span>
            </button>
          </div>
          <div class="modal-body">
            Select "Logout" below if you are ready to end your current session.
          </div>
          <div class="modal-footer">
            <button class="btn btn-secondary" type="button" data-dismiss="modal">
              Cancel
            </button>
            <a class="btn btn-primary" href="login.html">Logout</a>
          </div>
        </div>
      </div>
    </div>


    <!-- Custom scripts for all pages-->
    <script src="js/sb-admin-2.min.js"></script>

    <script type="text/javascript">
      function drawGraph(graph, status) {
        //console.log(graph.attributes.value[0].nodes);
        //console.log(status);

        for (i = 0; i < graph.attributes.value[0].nodes.length; i++) {
          graph.attributes.value[0].nodes[i].shape = "box";
        }


        console.log("Satus");
        entities = status[0];
        for (i = 0; i < entities.length; i++) {
          console.log(entities[i].id);
        }
        console.log(entities[1].id);
        console.log(entities[2].id);
        //window.open('data:text/csv;charset=utf-8,' + escape(status));


        var nodes = new vis.DataSet(graph.attributes.value[0].nodes);
        var edges = new vis.DataSet(graph.attributes.value[0].edges);


        // create a network
        var container = document.getElementById('graph');
        var data = {
          nodes: nodes,
          edges: edges
        };
        var options = {};
        var network = new vis.Network(container, data, options);
      }
    </script>
</body>

</html>
